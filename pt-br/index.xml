<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>thepabloaguilar</title>
    <link>https://thepabloaguilar.dev/pt-br/</link>
    <description>Recent content on thepabloaguilar</description>
    <image>
      <url>https://thepabloaguilar.dev/me.jpeg</url>
      <link>https://thepabloaguilar.dev/me.jpeg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 23 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://thepabloaguilar.dev/pt-br/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Não é só um Pull Request</title>
      <link>https://thepabloaguilar.dev/pt-br/nao-e-so-um-pull-request/</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thepabloaguilar.dev/pt-br/nao-e-so-um-pull-request/</guid>
      <description>Em todas as minhas experiências profissionais até agora eu vi várias pessoas/times ignorando o significado por trás de um Pull Request (PR), tratando ele só como um tipo de burocracia para colocar o código em produção.
Algumas vezes escutei pessoas falando uma para outra: &amp;ldquo;Vou abrir um PR aqui, aceita ai que está tudo certo&amp;rdquo;. No final esse PR foi realmente aceito sem nenhum tipo de revisão e acabou quebrando todo o sistema, posso dizer que o revisor é tão culpado quanto o revisado porque nesse caso o revisor foi negligente!</description>
    </item>
    
    <item>
      <title>Monkey Patching não é tão ruim</title>
      <link>https://thepabloaguilar.dev/pt-br/monkey-patching-nao-e-tao-ruim/</link>
      <pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://thepabloaguilar.dev/pt-br/monkey-patching-nao-e-tao-ruim/</guid>
      <description>Contexto Há alguns meses atrás comecei a contribuir em biblioteca Open Source para python, returns, ela têm vários recursos e contêineres legais para nos ajudar de diferentes maneiras. Não irei me aprofundar neles nesse post, mas você pode acessar a documentação para saber mais sobre!
Nesse post irei falar sobre o porquê nós escolhemos a técnica de monkey patching para implementar uma de nossas features onde o objetivo era melhorar a rastreabilidade de falhas para os contêineres Result.</description>
    </item>
    
    
    
  </channel>
</rss>
